# Copyright (c) 2021-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/security/huks/build/config.gni")
import("//base/security/huks/huks.gni")
import("//build/ohos.gni")
import("//build/test.gni")

module_output_path = "huks/huks/extension_unittest"

config("json_config") {
  cflags_cc = [ "-fexceptions" ]
}

if (os_level == "standard") {
ohos_unittest("extension_unit_test") {

  module_out_path = module_output_path
  include_dirs = [
    ".",
    "include",
    "//base/security/huks/frameworks/huks_standard/main/common/include",
    "//base/security/huks/interfaces/inner_api/huks_standard/main/include",
    "//base/security/huks/services/huks_standard/huks_service/extension/ukey/ext_life_cycle_manger/inc",
    "//base/security/huks/services/huks_standard/huks_service/extension/ukey/connection/inc",
    "//base/security/huks/services/huks_standard/huks_service/main/extension_plugin_manger/inc",
    "//base/security/huks/services/huks_standard/huks_service/extension/ukey/common/inc",
    "//base/security/huks/services/huks_standard/huks_service/extension/ukey/handle_manager/inc",
    "//base/security/huks/services/huks_standard/huks_service/extension/ukey/handle_manager/src",
  ]

  sources = [
    "./provider_mgr_test/hks_provider_manger_test.cpp",
    "./plugin_loader_test/hks_plugin_manager_test.cpp",
    "./extension_connect_test/hks_extension_connection_test.cpp",
    "./ukey_common_test/ukey_common_test.cpp",
    "./handle_mgr_test/hks_handle_manager_test.cpp"
  ]

  configs = [
    "//base/security/huks/frameworks/config/build:l2_standard_common_config",
  ]

  deps = [
    "//base/security/huks/frameworks/huks_standard/main/crypto_engine:libhuks_crypto_engine_standard_static",
    "//base/security/huks/frameworks/huks_standard/main/os_dependency:libhuks_mem_standard_static",
    "//base/security/huks/frameworks/huks_standard/main/os_dependency:libhuks_os_dependency_standard_static",
    "//base/security/huks/frameworks/huks_standard/main/os_dependency:libhuks_util_standard_static",
    "//base/security/huks/services/huks_standard/huks_service/extension/ukey/ext_life_cycle_manger:libhuks_provider_life_cycle_manager_static",
    "//base/security/huks/services/huks_standard/huks_service/extension/ukey/common:libhuks_ukey_common_static",
    "//base/security/huks/services/huks_standard/huks_service/main/extension_plugin_manger:libhuks_ukey_plugin_extesnion_static",
    "//base/security/huks/services/huks_standard/huks_service/extension/ukey/connection:libhuks_extension_connection_static",
    "//base/security/huks/services/huks_standard/huks_service/extension/ukey/handle_manager:libhuks_remote_handle_manager_static"
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
  ]

  if (os_level == "standard") {
    external_deps += [ "googletest:gtest" ]
  }

  cflags = [
    "-Wall",
    "-Werror",
  ]

  subsystem_name = "security"
  part_name = "huks"
}

ohos_shared_library("fake_success") {
  sources = [
    "./plugin_loader_test/fake_success.cpp",
  ]

  include_dirs = [
    ".", 
    "include",
  ]

  cflags = [
    "-fPIC",
    "-Wall",
  ]

  output_name = "fake_success"

  subsystem_name = "security"
  part_name = "huks"
}

ohos_shared_library("fake_fail") {
  sources = [
    "./plugin_loader_test/fake_fail.cpp",
  ]

  include_dirs = [
    ".", 
    "include",
  ]

  cflags = [
    "-fPIC",
    "-Wall",
  ]

  output_name = "fake_success"

  subsystem_name = "security"
  part_name = "huks"
}

}
